root = true

[*.cs]
# CS settings
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = false
csharp_prefer_braces = false
csharp_prefer_simple_default_expression = true
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,volatile,async,unsafe
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = true
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = true
csharp_space_between_parentheses = expressions,control_flow_statements
csharp_space_between_square_brackets = true
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_var_elsewhere = false:error
csharp_style_var_for_built_in_types = false:error
csharp_style_var_when_type_is_apparent = false:error

# Naming styles
dotnet_naming_style.upper_snake_case.capitalization = all_upper
dotnet_naming_style.upper_snake_case.word_separator = _

dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.underscore_camel_case.capitalization = camel_case
dotnet_naming_style.underscore_camel_case.required_prefix = _

dotnet_naming_style.pascal_case.capitalization = pascal_case

# Naming symbols
dotnet_naming_symbols.all_constants.applicable_kinds = field
dotnet_naming_symbols.all_constants.required_modifiers = const

dotnet_naming_symbols.private_fields_and_properties.applicable_kinds = field,property
dotnet_naming_symbols.private_fields_and_properties.applicable_accessibilities = private

dotnet_naming_symbols.public_assorted_0.applicable_kinds = class,struct,enum,property,method,field,event,delegate
dotnet_naming_symbols.public_assorted_0.applicable_accessibilities = public

dotnet_naming_symbols.private_assorted_0.applicable_kinds = class,struct,enum,delegate,method,event
dotnet_naming_symbols.private_assorted_0.applicable_accessibilities = private,internal,friend,protected,protected_internal,protected_friend

dotnet_naming_symbols.all_parameters.applicable_kinds = parameter

# Naming rules
dotnet_naming_rule.const_upper_snake_case.severity = warning
dotnet_naming_rule.const_upper_snake_case.symbols = all_constants
dotnet_naming_rule.const_upper_snake_case.style = upper_snake_case

dotnet_naming_rule.private_underscore_camel_case.severity = warning
dotnet_naming_rule.private_underscore_camel_case.symbols = private_fields_and_properties
dotnet_naming_rule.private_underscore_camel_case.style = underscore_camel_case

dotnet_naming_rule.public_pascal_case.severity = warning
dotnet_naming_rule.public_pascal_case.symbols = public_assorted_0
dotnet_naming_rule.public_pascal_case.style = pascal_case

dotnet_naming_rule.private_pascal_case.severity = warning
dotnet_naming_rule.private_pascal_case.symbols = private_assorted_0
dotnet_naming_rule.private_pascal_case.style = pascal_case

dotnet_naming_rule.param_camel_case.severity = warning
dotnet_naming_rule.param_camel_case.symbols = all_parameters
dotnet_naming_rule.param_camel_case.style = camel_case

# .NET naming descriptions #
#
# underscore_camel_case:
# private int _length;
#
# public_pascal_case:
# public int Length;
# public long GetLongLength() { } 
# public class Human { }
# public enum LengthType { }
# public struct Size { }
# public delegate void LengthChangedEvent;
# public event LengthChangedEvent LengthChanged;
#
# private_pascal_case:
# private class Human { }
# internal struct Size { }
# protected void Resize { }
# internal enum LengthType { }
#
# param_camel_case:
# public void SetLongLength( long length ) { }
#
# --- #

# .NET settings
dotnet_sort_system_directives_first = true
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning

# Spacing settings
indent_size = 4
indent_style = tab
insert_final_newline = false
tab_width = 4
end_of_line = lf